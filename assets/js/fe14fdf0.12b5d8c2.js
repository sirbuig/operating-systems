"use strict";(self.webpackChunkoperating_systems=self.webpackChunkoperating_systems||[]).push([[1111],{9697:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>m,toc:()=>c});var s=t(4848),r=t(8453);const i={sidebar_position:1},o="IPC - Exercise 1",m={id:"week-5/problems/ex1",title:"IPC - Exercise 1",description:"Set up a shared memory for communication between a parent and a child process.",source:"@site/docs/week-5/problems/ex1.md",sourceDirName:"week-5/problems",slug:"/week-5/problems/ex1",permalink:"/operating-systems/week-5/problems/ex1",draft:!1,unlisted:!1,editUrl:"https://github.com/sirbuig/operating-systems/tree/main/docs/week-5/problems/ex1.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Problems",permalink:"/operating-systems/category/problems-1"},next:{title:"IPC - Exercise 2",permalink:"/operating-systems/week-5/problems/ex2"}},a={},c=[];function p(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ipc---exercise-1",children:"IPC - Exercise 1"})}),"\n",(0,s.jsx)(n.p,{children:"Set up a shared memory for communication between a parent and a child process."}),"\n",(0,s.jsx)(n.p,{children:"The parent process writes a message to shared memory. The child process reads the message from shared memory and prints it."}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:"\ud83d\udca1Solution"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",metastring:'title="shared_memory.c"',children:'\n#include <stdio.h>\n#include <stdlib.h>\n#include <fcntl.h>\n#include <sys/mman.h>\n#include <sys/stat.h>\n#include <sys/wait.h>\n#include <unistd.h>\n#include <errno.h>\n#include <string.h>\n\nint main() {\n\tchar shm_name[] = "/TUTORING";\n\tint shm_fd;\n\n\tshm_fd = shm_open(shm_name, O_CREAT | O_RDWR, S_IRUSR | S_IWUSR);\n\tif(shm_fd < 0) {\n\t\tperror(NULL);\n\t\treturn errno;\n\t}\n\n\n\tsize_t shm_size = 1000;\n\n\tif(ftruncate(shm_fd, shm_size) == -1) {\n\t\tperror(NULL);\n\t\tshm_unlink(shm_name);\n\t\treturn errno;\n\t}\n\n\tvoid *shm_ptr = mmap(0, shm_size, PROT_READ | PROT_WRITE, MAP_SHARED, shm_fd, 0);\n\tif(shm_ptr == MAP_FAILED) {\n\t\tperror(NULL);\n\t\tshm_unlink(shm_name);\n\t\treturn errno;\n\t}\n\n\tpid_t pid = fork();\n\tif (pid == -1) {\n\t\tperror(NULL);\n\t\treturn errno;\n\t} else if(pid > 0) {\n\t\tconst char *msj = "Hello, child!";\n\t\tprintf("The parent is writing in the memory space...\\n");\n\t\tsnprintf((char *)shm_ptr, shm_size, "%s", msj);\n\n\t\twait(NULL);\n\n\t\tmunmap(shm_ptr, shm_size);\n\t\tshm_unlink(shm_name);\n\t} else {\n\t\tsleep(3);\n\t\tprintf("The child is reading the message...");\n\t\tprintf("%s\\n", (char *)shm_ptr);\n\n\t\tmunmap(shm_ptr, shm_size);\n\t}\n\n\treturn 0;\n}\n\n'})})]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>m});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);